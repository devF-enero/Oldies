directive @auth on FIELD_DEFINITION | FIELD # en la deficinicion de un nuevo campo

type Query {
        allUsers(is_active:Boolean, gender:GENDER): [User]!
        getOneUser(id:ID, email:String): User
        possibleMatchUsers:[User]!
}

type Mutation {
        newUser(data:UserAdd!): User
        login(email:String!,password:String!):Auth
        updateUser(data:UserUpdate!,id:ID!):User
        deleteUser:Message @auth
}

type Auth {
        token: String!
        message: String!
}

type Message {
        code: Int
        message: String
}

type User {
        _id: ID!
        first_name: String!
        last_name: String!
        email: String
        password: String
        age: Int!
        age_range: Int
        gender: GENDER! # all caps because it's an ENUM
        looking_for: [GENDER]
        likes: [User]
        matches: [User]
        rejected: [User]
        photo: String
        is_active: Boolean
}

enum GENDER {
        M
        F
        T
        N
        A
}

input UserAdd{
        first_name: String!
        last_name: String
        email: String!
        password: String!
        age: Int!
        age_range: Int! # datos requeridos para crear un usuario
        gender: GENDER! 
        looking_for: [GENDER]!
        photo: String
}

input UserUpdate {
        first_name: String
        last_name: String
        email: String
        password: String
        age: Int
        age_range: Int
        gender: GENDER # all caps because it's an ENUM
        looking_for: [GENDER]
        photo: String
        is_active: Boolean
}




# types son para lectura solamente

# graphql-scalars