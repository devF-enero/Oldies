directive @auth on FIELD_DEFINITION | FIELD # en la deficinicion de un nuevo campo

type Query {
        allUsers(is_active:Boolean, gender:GENDER): [User]! 
        getOneUser(id:ID, email:String): User 
        getPossibleMatchUsers(id:ID):[User]! 
        getAllMatches(id:ID): [User]! 
        allInterests: [Interest]! 
        getOneInterest(id:ID!): Interest 
        getUsersbyAnyInterests(id:ID, interests:[ID!]): [User]!
        getUsersbyEveryInterest(interests:[ID!]): [User]!
        newInterest(name:String!): Interest
        newInterestforUser(interest:ID!, id:ID): User
}

type Mutation {
        newUser(data:UserAdd!): User
        login(email:String!,password:String!):Auth
        updateUser(data:UserUpdate!,id:ID!):User 
        deleteUser:Message 
        processUserLikes(id:ID, userLiked:ID!): User 
        processUserRejections(id:ID, userRejected:ID!): User 
}

type Auth {
        token: String!
        message: String!
}

type Message {
        code: Int
        message: String
}

type User {
        _id: ID!
        name: Name!
        email: String
        password: String
        age: Int!
        age_range: AgeRange
        sex: GENDER! # all caps because it's an ENUM
        interested_in: [GENDER]
        likes: [User]
        matches: [User]
        rejected: [User]
        photo: String
        token: String
        is_active: Boolean
}

type Interest {
        _id: ID!
        name: String!
}

type Name {
        first: String
        middle: String
        last: String
}

input NameInput {
        first: String!
        middle: String
        last: String
}

input NameUpdate {
        first: String
        middle: String
        last: String
}

type AgeRange {
        min: Int
        max: Int
}

input AgeRangeInput {
        min: Int
        max: Int
}

enum GENDER {
        M
        F
        TW
        TM
        N
        A
}

input UserAdd{
        name: NameInput!
        email: String!
        password: String!
        age: Int!
        age_range: AgeRangeInput # datos requeridos para crear un usuario
        sex: GENDER! 
        interested_in: [GENDER]!
        photo: String
}

input UserUpdate {
        name: NameUpdate
        email: String
        password: String
        age: Int
        age_range: AgeRangeInput
        sex: GENDER # all caps because it's an ENUM
        interested_in:[GENDER]
        photo: String
        is_active: Boolean
}




# types son para lectura solamente

# graphql-scalars
